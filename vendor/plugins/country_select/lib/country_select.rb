# CountrySelect
module ActionView
  module Helpers
    module FormOptionsHelper
      # Return select and option tags for the given object and method, using country_options_for_select to generate the list of option tags.
      def country_select(object, method, priority_countries = nil, options = {}, html_options = {})
        InstanceTag.new(object, method, self, options.delete(:object)).to_country_select_tag(priority_countries, options, html_options)
      end
      # Returns a string of option tags for pretty much any country in the world. Supply a country name as +selected+ to
      # have it marked as the selected option tag. You can also supply an array of countries as +priority_countries+, so
      # that they will be listed above the rest of the (long) list.
      #
      # NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.
      def country_options_for_select(selected = nil, priority_countries = nil)
        country_options = ""

        if priority_countries
          country_options += options_for_select(priority_countries, selected)
          country_options += "<option value=\"\" disabled=\"disabled\">-------------</option>\n"          
        end
        # All the countries included in the country_options output.
      
      list = [
"country.European_Union",
"country.Everywhere",
      "country.Afghanistan",
      "country.Aland_Islands",
      "country.Albania",
      "country.Algeria",
      "country.American_Samoa",
      "country.Andorra",
      "country.Angola",
      "country.Anguilla",   
      "country.Antigua_and_Barbuda",
      "country.Argentina",
      "country.Armenia",
      "country.Aruba",
      "country.Australia",
      "country.Austria",
      "country.Azerbaijan",
      "country.Bahamas",
      "country.Bahrain",
      "country.Bangladesh",
      "country.Barbados",
      "country.Belarus",
      "country.Belgium",
      "country.Belize",
      "country.Benin",
      "country.Bermuda",
      "country.Bhutan",
      "country.Bolivia",
      "country.Bosnia_and_Herzegowina",
      "country.Botswana",
      "country.Bouvet_Island",
      "country.Brazil",
      "country.British_Indian_Ocean_Territory",
      "country.Brunei_Darussalam",
      "country.Bulgaria",
      "country.Burkina_Faso",
      "country.Burundi_Cambodia",
      "country.Cameroon",
      "country.Canada",
      "country.Cape_Verde",
      "country.Cayman_Islands",
      "country.Central_African_Republic",
      "country.Chad",
      "country.Chile",
      "country.China",
      "country.Christmas_Island",
      "country.Cocos_(Keeling)_Islands",
      "country.Colombia",
      "country.Comoros",
      "country.Congo",         
      "country.Congo_the_Democratic_Republic_of_the",
      "country.Cook_Islands",
      "country.Costa_Rica",
      "country.Cote_d_Ivoire",
      "country.Croatia",
      "country.Cuba",
      "country.Cyprus",
      "country.Czech_Republic",
      "country.Denmark",
      "country.Djibouti",
      "country.Dominica",
      "country.Dominican_Republic",
      "country.Ecuador",
      "country.Egypt",            
      "country.El_Salvador",
      "country.Equatorial_Guinea",
      "country.Eritrea",
      "country.Estonia",
      "country.Ethiopia",
      "country.Falkland_Islands",          
      "country.Faroe_Islands",
      "country.Fiji",
      "country.Finland",
      "country.France",
      "country.French_Guiana",
      "country.French_Polynesia",
      "country.French_Southern_Territories",
      "country.Gabon",
      "country.Gambia",
      "country.Georgia",
      "country.Germany",
      "country.Ghana",
      "country.Gibraltar",
      "country.Greece",
      "country.Greenland",
      "country.Grenada",
      "country.Guadeloupe",
      "country.Guam",
      "country.Guatemala",
      "country.Guernsey",
      "country.Guinea",
      "country.Guinea-Bissau",
      "country.Guyana",
      "country.Haiti",
      "country.Heard_and_McDonald_Islands",
      "country.Holy_See",
      "country.Honduras",
      "country.Hong_Kong", 
      "country.Hungary",
      "country.Iceland",
      "country.India",
      "country.Indonesia",
      "country.Iran_Islamic_Republic_of",
      "country.Iraq",
      "country.Ireland",
      "country.Isle_of_Man", 
      "country.Israel",
      "country.Italy",
      "country.Jamaica",
      "country.Japan", 
      "country.Jersey",
      "country.Jordan",
      "country.Kazakhstan",
      "country.Kenya",
      "country.Kiribati",
      "country.Korea_Democratic_Peoples_Republic_of",
      "country.Korea_Republic_of",         
      "country.Kuwait",
      "country.Kyrgyzstan",
      "country.Lao_Peoples_Democratic_Republic",
      "country.Latvia",
      "country.Lebanon",
      "country.Lesotho",
      "country.Liberia",
      "country.Libyan_Arab_Jamahiriya",
      "country.Liechtenstein",
      "country.Lithuania",
      "country.Luxembourg",
      "country.Macao",
      "country.Macedonia_The_Former_Yugoslav_Republic_Of",
      "country.Madagascar", 
      "country.Malawi",
      "country.Malaysia",
      "country.Maldives", 
      "country.Mali",
      "country.Malta", 
      "country.Marshall_Islands",
      "country.Martinique",
      "country.Mauritania",
      "country.Mauritius",
      "country.Mayotte",
      "country.Mexico", 
      "country.Micronesia_Federated_States_of",
      "country.Moldova_Republic_of",
      "country.Monaco",
      "country.Mongolia",
      "country.Montenegro",
      "country.Montserrat",
      "country.Morocco", 
      "country.Mozambique",
      "country.Myanmar",
      "country.Namibia",
      "country.Nauru",
      "country.Nepal",
      "country.Netherlands",
      "country.Netherlands_Antilles",
      "country.New_Caledonia",
      "country.New_Zealand",
      "country.Nicaragua",
      "country.Niger",
      "country.Nigeria",
      "country.Niue",
      "country.Norfolk_Island",
      "country.Northern_Mariana_Islands", 
      "country.Norway",
      "country.Oman",
      "country.Pakistan",
      "country.Palau",
      "country.Palestinian_Territory_Occupied",
      "country.Panama",
      "country.Papua_New_Guinea",
      "country.Paraguay",
      "country.Peru",
      "country.Philippines",
      "country.Pitcairn",
      "country.Poland",
      "country.Portugal", 
      "country.Puerto_Rico",
      "country.Qatar",
      "country.Reunion",
      "country.Romania", 
      "country.Russian_Federation",
      "country.Rwanda",
      "country.Saint_Barthelemy",
      "country.Saint_Helena",
      "country.Saint_Kitts_and_Nevis",
      "country.Saint_Lucia",
      "country.Saint_Pierre_and_Miquelon",
      "country.Saint_Vincent_and_the_Grenadines",
      "country.Samoa", 
      "country.San_Marino",
      "country.Sao_Tome_and_Principe",
      "country.Saudi_Arabia",
      "country.Senegal",
      "country.Serbia",
      "country.Seychelles",
      "country.Sierra_Leone",
      "country.Singapore",
      "country.Slovakia", 
      "country.Slovenia",
      "country.Solomon_Islands",
      "country.Somalia",
      "country.South_Africa",
      "country.South_Georgia_and_the_South_Sandwich_Islands",
      "country.Spain",
      "country.Sri_Lanka",
      "country.Sudan",
      "country.Suriname",
      "country.Svalbard_and_Jan_Mayen",
      "country.Swaziland",
      "country.Sweden",
      "country.Switzerland", 
      "country.Syrian_Arab_Republic",
      "country.Taiwan Tajikistan",
      "country.Tanzania_United_Republic_of",
      "country.Thailand",
      "country.Timor-Leste",      
      "country.Togo",
      "country.Tokelau",
      "country.Tonga",
      "country.Trinidad_and_Tobago",
      "country.Tunisia",
      "country.Turkey",
      "country.Turkmenistan",
      "country.Turks_and_Caicos_Islands", 
      "country.Tuvalu",
      "country.Uganda",
      "country.Ukraine",
      "country.United_Arab_Emirates",
      "country.United_ Kingdom",
      "country.United_States",
      "country.United_States_Minor_Outlying_Islands",
      "country.Uruguay",
      "country.Uzbekistan",
      "country.Vanuatu",
      "country.Venezuela",
      "country.Viet_Nam",
      "country.Virgin_Islands_British",
      "country.Virgin_IslandsUS",
      "country.Wallis_and_Futuna",
      "country.Western_Sahara",
      "country.Yemen",
      "country.Zambia",
      "country.Zimbabwe"]
    
        list.each do |c|
          country_options += "<option value=\"" + c  + "\">" + I18n.t(c) + "</option>\n"    
        end
        
        return country_options #+ options_for_select(COUNTRIES, selected)
      end
      
      COUNTRIES = [] unless const_defined?("COUNTRIES")
        
    end
    
    class InstanceTag
      def to_country_select_tag(priority_countries, options, html_options)
        html_options = html_options.stringify_keys
        add_default_name_and_id(html_options)
        value = value(object)
        content_tag("select",
          add_options(
            country_options_for_select(value, priority_countries),
            options, value
          ), html_options
        )
      end
    end
    
    class FormBuilder
      def country_select(method, priority_countries = nil, options = {}, html_options = {})
        @template.country_select(@object_name, method, priority_countries, options.merge(:object => @object), html_options)
      end
    end
  end
end